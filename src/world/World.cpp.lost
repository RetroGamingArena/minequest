
Thu May 07 00:04:55 CEST 2015
================================================================================
Start of user code getWorldGenerators
	// End of user code

Thu May 07 17:50:25 CEST 2015
================================================================================
Start of user code buildTask
    if( mutex->try_lock() && hasNext())
    {
        Chunk* chunk = chunks[chunkIndice];
        ChunkTask* chunkTask = new ChunkTask(chunk, worldGenerator);
        chunkIndice = chunkIndice+1;
        mutex->unlock();
        return chunkTask;
    }
    return NULL;
	// End of user code

Thu May 07 17:52:34 CEST 2015
================================================================================
Start of user code * buildTask
	// End of user code

Fri May 08 15:31:52 CEST 2015
================================================================================
Start of user code isRunning
	// End of user code

Sun Jun 07 13:10:29 CEST 2015
================================================================================
Start of user code hasNext
    chunkIndice = -1;
    World* world = Engine::getInstance()->getWorld();
    for(int i = 0; i < world->getChunks().size(); i++)
        if(!world->getChunks()[i]->getGenerated() && !world->getChunks()[i]->getGenerating())
        {
            chunkIndice = i;
            return true;
        }
    return false;
	// End of user code

Tue Jun 16 19:53:36 CEST 2015
================================================================================
Start of user code bufferizeEntryRect
    vector<GLfloat>* data = vertexBuffer->getData();
    
    data->push_back(p);
    data->push_back(q);
    data->push_back(r);
    
    //data->push_back(type);
    
    data->push_back( (type << 17) + (occlusion << 15) + ((width-1) << 10) + ((height-1) << 5) + (width-1));
    //data->push_back(height);
    //data->push_back(width);
    
    //data->push_back(occlusion);
    
    cubeCount += (width*width*height);
	// End of user code
