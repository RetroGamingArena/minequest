
Thu May 07 21:01:56 CEST 2015
================================================================================
Start of user code getOctreeEntrys
	// End of user code

Fri May 08 14:21:20 CEST 2015
================================================================================
Start of user code bufferize
	// End of user code

Sun May 17 23:57:22 CEST 2015
================================================================================
Start of user code generate
    unsigned char* types = new unsigned char[8];
    
    int size_2 = size >> 1;
    int size_4 = size_2 >> 1;
    
    for(int i = 0; i < 8; i++)
    {
        int x = (i%4)&1;
        int y = i >> 2;
        int z = (i%4) >> 1;
        
        if(this->octreeEntries[i] == NULL)
        {
            if(size==2)
            {
                types[0] = 0;
                
                //for(ii = 0; ii < 8; ii++)
                {
                    //int xx = (ii%4)&1;
                    //int yy = ii >> 2;
                    //int zz = (ii%4) >> 1;
                    
                    
                    unsigned char type = worldGenerator->getCubeType(p+x*size_2, q+y*size_2, r+z*size_2);//CubeType::getTypeFromHeight(q+y*size_2+yy);
                
                    if(type > 0)
                        octreeEntries[i] = new Leaf(type);
                }
                continue;
            }
            else
            {
                octreeEntries[i] = new Node();
                octreeEntries[i]->generate(worldGenerator, p+x*size_2, q+y*size_2, r+z*size_2, size_2);
            }
            
            if(octreeEntries[i]->isCompressible() )
            {
                unsigned char type = worldGenerator->getCubeType(p+x*size_2, q+y*size_2, r+z*size_2);
                compress(x,y,z, type);
            }
            
        }
    }
    delete[] types;
    if(size == 1)
    {
        return;
    }
	// End of user code
